/* вынесено в root, чтобы задать один экземпляр переменной, а не создавать несколько для каждого узла `code-block` */
:root {
  --code-lines-lightness: calc(var(--is-dark-theme-on) * 60% + var(--is-light-theme-on) * 34%);
}

.code-block {
  --line-height: calc(24 / 18);
  margin-top: 10px;
  margin-bottom: 20px;
  counter-reset: line-count 0;
  display: grid;
  align-items: start;
  align-content: start;
  grid-template-columns: auto minmax(0, 1fr);
  grid-template-areas: 'lines code';
  overflow: auto;
  overscroll-behavior-x: contain;
  white-space: normal;
  font-size: 1em;
  line-height: var(--line-height);
  letter-spacing: var(--letter-spacing);
  font-family: var(--font-family, monospace);
}

.code-block__lines {
  grid-area: lines;
  position: sticky;
  left: 0;
  pointer-events: none;
  user-select: none;
  padding-right: 20px;
  font: inherit;
  text-align: end;
  background-color: var(--code-lines-background, hsl(var(--color-base-background) / 0.92));
  color: hsl(0 0% var(--code-lines-lightness));
}

.code-block__line {
  counter-increment: line-count;
  position: relative;
  display: block;
  min-height: calc(var(--line-height) * 1em);
}

.code-block__line::before {
  content: counter(line-count);
  display: block;
}

.code-block__original,
.code-block__highlight {
  grid-area: code;
  font: inherit;
}

.code-block__original {
  visibility: hidden;
  user-select: none;
}

.code-block__original-line {
  white-space: pre;
  display: block;
  min-height: calc(var(--line-height) * 1em);
  font: inherit;
}

.code-block__highlight {
  white-space: pre;
}

@media (min-width: 768px) {
  .code-block {
    margin-top: 20px;
    margin-bottom: 20px;
  }
}

@media (min-width: 1024px) {
  .code-block {
    margin-top: 20px;
    margin-bottom: 60px;
  }
}

@media (min-width: 1680px) {
  .code-block {
    margin-top: 32px;
    margin-bottom: 50px;
  }
}
